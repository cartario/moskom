{"version":3,"sources":["utils.js","components/rules.jsx","components/error-name.jsx","components/error-check-pass.jsx","components/registration-form.jsx","components/step-two.jsx","components/modal.jsx","App.js","serviceWorker.js","index.js"],"names":["getMessage","password","inCase","touched","passwordSize","match","hasDifLetters","hasNumber","className","length","props","style","fontSize","form","email","name","checkPassword","setFormData","useState","setForm","conditions","setConditions","setTouched","allFieldsFulled","Object","values","every","value","Boolean","isValidEmail","isValidName","isValidPassword","isValidCheckPass","validationSchema","isValidForm","changeHandler","e","target","blurHandler","Form","onSubmit","preventDefault","FormGroup","Label","for","Input","valid","invalid","onBlur","onChange","type","id","placeholder","pass","check","href","Button","disabled","backgroundColor","setSubmitting","setModal","formData","sex","education","about","politic","economic","events","console","log","JSON","stringify","tag","buttonLabel","isSubmitting","modal","toggle","onClick","Modal","isOpen","ModalHeader","border","ModalBody","App","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6891f20d.chunk.js","sourcesContent":["export const validationSchema = (form) => {\r\n  return {\r\n    allFieldsFulled: Object.values(form).every((value)=>Boolean(value)),\r\n    isValidEmail: !!form.email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i),\r\n    isValidName: !!form.name.match(/^[a-zA-Z][a-zA-Z0-9-_\\.]{3,40}$/),\r\n    isValidPassword: !!form.password.match(/(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{6,32}$/),\r\n    isValidCheckPass: Boolean(form.checkPassword && form.password === form.checkPassword && \r\n      form.checkPassword !== form.email && form.checkPassword !== form.name),        \r\n  }\r\n};\r\n\r\nexport const getMessage = (password, inCase, touched) => {\r\n  switch(true) {\r\n    case inCase:\r\n      return `success`\r\n    case password && !inCase:\r\n      return `error`\r\n    case touched && !inCase:\r\n      return `error`\r\n    default:\r\n  return `default`      \r\n  }\r\n};\r\n","import React from 'react';\r\nimport {getMessage} from '../utils';\r\n\r\nexport default ({password, touched}) => {  \r\n  const passwordSize = !!password.match(/[0-9a-zA-Z]{6,32}$/);\r\n  const hasDifLetters = !!password.match(/(?=.*[a-z])(?=.*[A-Z])/);\r\n  const hasNumber = !!password.match(/(?=.*[0-9])/);\r\n\r\n  return (\r\n    <div className=\"rules\">\r\n      <span>Пароль должен содержать</span>\r\n      <ul>\r\n        <li className={          \r\n          password.length < 2 &&!touched ? `default` : getMessage(password, passwordSize, touched)}>\r\n          От 6 до 32 символов</li>\r\n        <li className={         \r\n          !hasDifLetters && !hasNumber && !touched ? `default` :  getMessage(password, hasNumber, touched)}>\r\n          Цифру\r\n        </li>\r\n        <li className={         \r\n          password.length < 2 &&!touched? `default` : getMessage(password, hasDifLetters, touched)}>\r\n          Заглавную и строчную букву\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div style={{fontSize: `12px`}}> \r\n      <span>Не забудьте ввести корректный никнейм. Никнейм:</span>\r\n      <ul>\r\n        <li className=\"error\">должен начинаться с буквы</li>\r\n        <li className=\"error\">должен состоять из более 3-х латинских символов без пробелов и спецсимволов</li>\r\n        <li >может содержать цифры и нижнее подчеркивание</li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\n\r\nexport default ({form, touched}) => {\r\n  switch(true){\r\n    case form.email && form.password === form.email:\r\n      return (\r\n        <span className=\"checkPass error\">Пароль не должен совпадать с почтой</span>\r\n      );\r\n    case form.name && form.password === form.name:\r\n      return (\r\n        <span className=\"checkPass error\">Пароль не должен совпадать с никнеймом</span>\r\n      );\r\n    case touched.checkPassword && form.checkPassword !==form.password:\r\n      return (\r\n        <span className=\"checkPass error\"> Пароли не совпадают</span>\r\n      );    \r\n    default:\r\n      return ``\r\n  }\r\n};\r\n","import React, {useState} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport {validationSchema} from '../utils';\r\nimport Rules from './rules';\r\nimport ErrorName from './error-name';\r\nimport ErrorCheckPass from './error-check-pass';\r\n\r\nexport default (props) => {\r\n  const {setFormData} = props;\r\n  \r\n  const [form, setForm] = useState({email: ``, name: ``, password: ``, checkPassword: ``});\r\n  const [conditions, setConditions] = useState(false);\r\n  const [touched, setTouched] = useState({email: false, name: false, password: false, checkPassword: false});\r\n\r\n  const {allFieldsFulled, isValidEmail, isValidName, isValidPassword, isValidCheckPass} = validationSchema(form);\r\n  const isValidForm = allFieldsFulled && isValidEmail && isValidName && isValidPassword && isValidCheckPass && conditions;\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;    \r\n    setForm({\r\n      ...form, [name]:value\r\n    });    \r\n  };\r\n\r\n  const blurHandler = (e) => {    \r\n    const name = e.target.name;    \r\n    setTouched({\r\n      ...touched, [name]:true\r\n    });   \r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={(e)=>{\r\n      e.preventDefault();     \r\n      setFormData(form);     \r\n    }}>      \r\n      <FormGroup>\r\n        <Label className=\"label\" for=\"email\">Email</Label>\r\n        <Input           \r\n          valid = {isValidEmail&&touched.email} invalid = {!isValidEmail&&touched.email} \r\n          value={form.email} onBlur={blurHandler} onChange={changeHandler}        \r\n          type=\"email\" name=\"email\" id=\"email\" placeholder=\"Введите e-mail\" />\r\n        {touched.email && !isValidEmail && <p className=\"error\">Не забудьте ввести действительный email</p>}\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label className=\"label\" for=\"name\">Никнейм</Label>\r\n        <Input \r\n          valid = {isValidName&&touched.name} invalid = {!isValidName&&touched.name} \r\n          value={form.name} onBlur={blurHandler} onChange={changeHandler}\r\n          type=\"text\" name=\"name\" id=\"name\" />\r\n\r\n        {!isValidName&&touched.name && <ErrorName />} \r\n\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label className=\"label\" for=\"password\">Пароль</Label>\r\n        <Input \r\n        valid = {isValidPassword&&touched.password} invalid = {!isValidPassword&&touched.password} \r\n        value={form.pass} onBlur={blurHandler} onChange={changeHandler} \r\n        type=\"password\" name=\"password\" id=\"password\" placeholder=\"Введите пароль\" />\r\n        {touched.password && !isValidPassword && <p className=\"error\"> Слишком простой пароль</p>}\r\n        <Rules password={form.password} touched={touched.password}/>       \r\n      </FormGroup>\r\n      \r\n      <FormGroup>\r\n        <Label className=\"label\" for=\"checkPassword\">Пароль еще раз</Label>\r\n        <Input\r\n        valid = {isValidCheckPass&&touched.checkPassword} \r\n        invalid = {!isValidCheckPass&&touched.checkPassword} \r\n        value={form.checkPassword} onBlur={blurHandler}\r\n        onChange={changeHandler} type=\"password\" name=\"checkPassword\" id=\"checkPassword\" placeholder=\"Введите еще раз пароль\" />\r\n        \r\n        {form.checkPassword && isValidCheckPass ?\r\n          <span className=\"checkPass checkPassOk\"> Пароли совпадают</span> :\r\n          <ErrorCheckPass form={form} touched={touched}/>}\r\n        \r\n      </FormGroup>\r\n      <FormGroup check>\r\n        <Label check>\r\n          <Input value={conditions} onChange={()=>setConditions(!conditions)} type=\"checkbox\" name=\"conditions\"/>{' '}\r\n          Я принимаю условия <a href=\"#\">пользовательского соглашения</a>\r\n        </Label>\r\n      </FormGroup>\r\n      <div className=\"center\">\r\n        <Button disabled={!isValidForm} style={{backgroundColor: `#558CB7`}}>Далее</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n}\r\n","import React, {useState} from 'react';\r\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nexport default (props)=>{\r\n  const {setSubmitting, setModal, formData, setFormData} = props;\r\n  const [form, setForm] = useState({sex: ``, education: ``, about: ``, politic: false,\r\n  economic: false, events: false, \r\n});\r\n\r\n  const changeHandler = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if(e.target.type!==`checkbox`){\r\n      setForm({\r\n        ...form,\r\n        [name]: value\r\n      })\r\n    } else {\r\n      setForm({\r\n        ...form,\r\n        [name]: !form[name]\r\n      })\r\n    }    \r\n  };\r\n  \r\n  return (\r\n    <Form onSubmit={(e)=>{\r\n      e.preventDefault();\r\n      setSubmitting(true);\r\n      setModal(false);\r\n      setFormData({...formData, ...form});\r\n      console.log(JSON.stringify({...formData, ...form}));\r\n    }}>\r\n      <FormGroup tag=\"fieldset\" onChange={changeHandler}>\r\n        <legend>Выберите пол</legend>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"radio\" name=\"sex\" value=\"М\" />{' '}\r\n            М\r\n          </Label>\r\n        </FormGroup>\r\n        <FormGroup check>\r\n          <Label check>\r\n            <Input type=\"radio\" name=\"sex\" value=\"Ж\" />{' '}\r\n            Ж\r\n          </Label>\r\n        </FormGroup>        \r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"education\">Уровень образования</Label>\r\n        <Input type=\"select\" name=\"education\" id=\"education\" value={form.education} onChange={changeHandler}>\r\n          <option></option>\r\n          <option>Начальное</option>\r\n          <option>Среднее</option>\r\n          <option>Высшее</option>\r\n        </Input>\r\n      </FormGroup>\r\n      <FormGroup>\r\n        <Label for=\"about\">О себе</Label>\r\n        <Input type=\"textarea\" name=\"about\" id=\"about\" value={form.about} onChange={changeHandler}/>\r\n      </FormGroup>\r\n      <Label>Хочу подписаться на рубрики:</Label>\r\n      <FormGroup check>\r\n        <Label check>\r\n          <Input type=\"checkbox\" name=\"politic\" value={form.politic} onChange={changeHandler}/>{' '}\r\n          Политика\r\n        </Label>\r\n      </FormGroup>\r\n      <FormGroup check>\r\n        <Label check>\r\n          <Input type=\"checkbox\" name=\"economic\" value={form.economic} onChange={changeHandler}/>{' '}\r\n          Экономика\r\n        </Label>\r\n      </FormGroup>\r\n      <FormGroup check>\r\n        <Label check>\r\n          <Input type=\"checkbox\" name=\"events\" value={form.events} onChange={changeHandler}/>{' '}\r\n          Проишествия\r\n        </Label>\r\n      </FormGroup>\r\n      <p></p>\r\n      <div className=\"center\">\r\n        <Button style={{backgroundColor: `#558CB7`}}>Зарегистрироваться</Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport RegistrationForm from './registration-form';\r\nimport StepTwo from './step-two';\r\n\r\nexport default ({buttonLabel, className}) => {\r\n  const [isSubmitting, setSubmitting] = useState(false);\r\n  const [modal, setModal] = useState(false);\r\n  const [formData, setFormData] = useState(null);\r\n\r\n  const toggle = () => setModal(!modal);\r\n\r\n  return (    \r\n    <>\r\n      <Button \r\n        style={{backgroundColor: isSubmitting ? `green` :  `#558CB7`}}         \r\n        onClick={toggle} \r\n        disabled={isSubmitting}\r\n        >{buttonLabel}\r\n      </Button>\r\n      <Modal isOpen={modal} toggle={toggle} className={className}>\r\n        <ModalHeader style={{border: `none`}} toggle={toggle}>Регистрация</ModalHeader>\r\n        <ModalBody>\r\n          \r\n          {formData ? <StepTwo setFormData={setFormData} formData={formData} setSubmitting={setSubmitting} setModal={setModal}/> : <RegistrationForm setFormData={setFormData}/>\r\n          }\r\n        </ModalBody>       \r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Modal from './components/modal';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Modal \r\n      buttonLabel={`Регистрация`}\r\n      className={`registration`}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}